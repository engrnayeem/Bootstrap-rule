The .container class provides a responsive fixed width container
The .container-fluid class provides a full width container, spanning the entire width of the viewport

m - for classes that set margin
p - for classes that set padding
Where sides is one of:

t - for classes that set margin-top or padding-top
b - for classes that set margin-bottom or padding-bottom
s - (start) for classes that set margin-left or padding-left in LTR, margin-right or padding-right in RTL
e - (end) for classes that set margin-right or padding-right in LTR, margin-left or padding-left in RTL
x - for classes that set both *-left and *-right
y - for classes that set both *-top and *-bottom
blank - for classes that set a margin or padding on all 4 sides of the element


fs-->font size
fw->font weight-->bold bolder
mt->margin top
pt-->padding top
mb-->margin bottom
pb-->padding bottom
ml-->margin left
pl-->padding left
mr-->margin right
pr-->padding right

x - for classes that set both *-left and *-right
y - for classes that set both *-top and *-bottom

auto - for classes that set the margin to auto
mx-->
my-->

lh-->line height
1rem=16px;
0 - for classes that eliminate the margin or padding by setting it to 0
1 - (by default) for classes that set the margin or padding to $spacer * .25-->.25rem=4px
2 - (by default) for classes that set the margin or padding to $spacer * .5-->.50rem=8px
3 - (by default) for classes that set the margin or padding to $spacer-->1rem=16px
4 - (by default) for classes that set the margin or padding to $spacer * 1.5-->1.5rem=24px
5 - (by default) for classes that set the margin or padding to $spacer * 3-->3rem=48px


Horizontal centering
Additionally, Bootstrap also includes an .mx-auto class for horizontally centering fixed-width block level content—that is, content that has display: block and a width set—by setting the horizontal margins to auto.

Width
Set the width of an element with the w-* classes (.w-25, .w-50, .w-75, .w-100, .mw-auto, .mw-100):

Width 25%
Width 50%
Width 75%
Width 100%
Auto Width
Max Width 100%

Set the height of an element with the h-* classes (.h-25, .h-50, .h-75, .h-100, .mh-auto, .mh-100):

Height 25% Height 50% Height 75% Height 100% Auto Height Max Height 100%


Easily add auto margins to flex items with .ms-auto (push items to the right), or by using .me-auto (push items to the left):


Use .border-1 to .border-5 to change the width of the border:


<span class="rounded"></span>
<span class="rounded-top"></span>
<span class="rounded-end"></span>
<span class="rounded-bottom"></span>
<span class="rounded-start"></span>
<span class="rounded-circle"></span>
<span class="rounded-pill" style="width:130px"></span>
<span class="rounded-0"></span>
<span class="rounded-1"></span>
<span class="rounded-2"></span>
<span class="rounded-3"></span>


<p class="text-primary">.text-primary</p>
<p class="text-secondary">.text-secondary</p>
<p class="text-success">.text-success</p>
<p class="text-danger">.text-danger</p>
<p class="text-warning bg-dark">.text-warning</p>
<p class="text-info bg-dark">.text-info</p>
<p class="text-light bg-dark">.text-light</p>
<p class="text-dark">.text-dark</p>
<p class="text-body">.text-body</p>
<p class="text-muted">.text-muted</p>
<p class="text-white bg-dark">.text-white</p>
<p class="text-black-50">.text-black-50</p>
<p class="text-white-50 bg-dark">.text-white-50</p>



Bootstrap 5 has a wide range of responsive margin and padding utility classes. They work for all breakpoints: xs (<=576px), sm (>=576px), md (>=768px), lg (>=992px), xl (>=1200px) or xxl (>=1400px)):


.d-*-flex	Creates a flexbox container for different screens	
.d-*-inline-flex	Creates an inline flexbox container for different screens	
Direction	 	 
.flex-*-row	Display flex items horizontally on different screens	
.flex-*-row-reverse	Display flex items horizontally, and right-aligned, on different screens	
.flex-*-column	Display flex items vertically on different screens	
.flex-*-column-reverse	Display flex items vertically, with reversed order, on different screens screens	
Justified Content	 	 
.justify-content-*-start	Display flex items from the start (left-aligned) on different screens	
.justify-content-*-end	Display flex items at the end (right-aligned) on different screens	
.justify-content-*-center	Display flex items in the center of a flex container on different screens	
.justify-content-*-between	Display flex items in "between" on different screens	
.justify-content-*-around	Display flex items "around" on different screens	
Fill / Equal Width	 	 
.flex-*-fill	Force flex items into equal widths on different screens	
Grow	 	 
.flex-*-grow-0	Don't make the items grow on different screens	 
.flex-*-grow-1	Make items grow on different screens	 
Shrink	 	 
.flex-*-shrink-0	Don't make the items shrink on diferent screens	 
.flex-*-shrink-1	Make items shrink on different screens	 
Order	 	 
.order-*-0-12	Change the order from 0 to 5 on small screens	
Wrap	 	 
.flex-*-nowrap	Don't wrap items on different screens	
.flex-*-wrap	Wrap items on different screens	
.flex-*-wrap-reverse	Reverse the wrapping of items on different screens	
Align Content	 	 
.align-content-*-start	Align gathered items from the start on different screens	
.align-content-*-end	Align gathered items at the end on different screens	
.align-content-*-center	Align gathered items in the center on different screens	
.align-content-*-around	Align gathered items "around" on different screens	
.align-content-*-stretch	Stretch gathered items on different screens	
Align Items	 	 
.align-items-*-start	Align single rows of items from the start on different screens	
.align-items-*-end	Align single rows of items at the end on different screens	
.align-items-*-center	Align single rows of items in the center on different screens	
.align-items-*-baseline	Align single rows of items on the baseline on different screens	
.align-items-*-stretch	Stretch single rows of items on different screens	
Align Self	 	 
.align-self-*-start	Align a flex item from the start on different screens	
.align-self-*-end	Align a flex item at the end on different screens	
.align-self-*-center	Align a flex item in the center on different screens	
.align-self-*-baseline	Align a flex item on the baseline on different screens	
.align-self-*-stretch	Stretch a flex item on different screens	




Position values
Quick positioning classes are available, though they are not responsive.

Copy
<div class="position-static">...</div>
<div class="position-relative">...</div>
<div class="position-absolute">...</div>
<div class="position-fixed">...</div>
<div class="position-sticky">...</div>
Arrange elements
Arrange elements easily with the edge positioning utilities. The format is {property}-{position}.

Where property is one of:

top - for the vertical top position
start - for the horizontal left position (in LTR)
bottom - for the vertical bottom position
end - for the horizontal right position (in LTR)
Where position is one of:

0 - for 0 edge position
50 - for 50% edge position
100 - for 100% edge position


for violating bootstrap condition use !important rule

What is !important?
The !important rule in CSS is used to add more importance to a property/value than normal.

In fact, if you use the !important rule, it will override ALL previous styling rules for that specific property on that element!








